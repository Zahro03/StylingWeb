<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Todo</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/Todo.css">
    <style>
        /* Styling untuk elemen body */
        html, body {
            height: 100%;
            margin: 0;
            display: flex;
            flex-direction: column;
            background-color: silver; /* Warna latar belakang lembut */
        }

        /* Wrapper untuk memposisikan konten utama dan footer */
        .wrapper {
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }

        /* Header */
        header {
            background-color: #f8d7e6; /* Pink kalem */
            width: 100%;
            top: 0;
            z-index: 100;
            border-bottom: 1px solid #ddd;
            padding: 10px 20px;
        }

        .logo img {
            height: 60px;
            object-fit: contain;
        }

        /* Navigasi */
        .nav {
            flex-grow: 1;
            display: flex;
            justify-content: center;
        }

        .nav-list {
            list-style-type: none;
            padding: 0;
            margin: 0;
            display: flex;
            gap: 20px;
        }

        .nav-link {
            text-decoration: none;
            color: #333;
            font-size: 1.1rem;
            font-weight: bold;
        }

        .nav-link:hover {
            color: #e573a7; /* Pink yang lebih tajam */
            text-decoration: underline; /* Menambahkan garis bawah saat hover */
        }

        /* Tombol Log Out */
        .logout .btn {
            background-color: #e573a7; /* Pink tajam */
            color: white;
            border: none;
            padding: 8px 15px;
            font-size: 1rem;
            border-radius: 5px;
            transition: background-color 0.3s ease;
        }

        .logout .btn:hover {
            background-color: #d95383; /* Warna hover lebih gelap */
        }

        /* Konten Utama */
        .todo-container {
            padding-top: 80px; /* Space for fixed header */
            display: flex;
            flex-wrap: wrap; /* Wrap cards into new row after 3 cards */
            justify-content: center; /* Center the cards */
        }

        /* Styling untuk card */
        .todo-card {
            background-color: palevioletred; /* Ganti dengan warna utama halaman */
            color: black;
            border-radius: 10px;
            padding: 20px;
            margin: 15px;
            width: 260px;
            transition: transform 0.3s, box-shadow 0.3s;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            text-align: center;
            display: inline-block;
            position: relative;
        }

        .todo-card:hover {
            transform: scale(1.05); /* Membuat kartu sedikit lebih besar */
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3); /* Bayangan lebih besar */
            background-color: #ff6f91; /* Mengubah warna latar belakang saat hover */
        }

        .todo-card button {
            background-color: pink; /* Sesuaikan dengan warna pink */
            color: white;
            border: none;
            padding: 5px 10px; /* Smaller padding */
            cursor: pointer;
            border-radius: 5px;
            font-size: 14px; /* Smaller text */
            transition: background-color 0.3s ease;
        }

        .todo-card button:hover {
            background-color: #d95383; /* Warna hover lebih gelap */
            transform: scale(1.1); /* Membuat tombol sedikit lebih besar */
        }

        .todo-card .buttons {
            display: flex;
            justify-content: space-between;
            gap: 10px;
            margin-top: 15px;
        }

        /* Modal */
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.4);
            padding-top: 60px;
        }

        .modal-content {
            background-color: #fefefe;
            margin: 5% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-width: 400px;
        }

        /* Footer */
        footer {
            margin-top: auto; /* Memastikan footer berada di bawah */
            background-color: #f1f1f1; /* Warna latar belakang footer */
            color: #333;
            padding: 15px 0;
        }

        footer p {
            margin: 0;
            color: #666;
            font-size: 1rem;
            font-family: 'Arial', sans-serif;
        }
    </style>
</head>
<body>

<!-- Wrapper -->
<div class="wrapper d-flex flex-column min-vh-100">
    <!-- Header -->
    <header class="d-flex justify-content-between align-items-center py-3 px-4 bg-light fixed-top">
        <div class="logo">
            <img src="images/logo.png" alt="logo" height="40">
        </div>
        <nav class="nav mx-auto">
            <ul class="nav-list d-flex justify-content-center gap-4">
                <li><a href="/" class="nav-link">Home</a></li>
                <li><a href="/contact" class="nav-link">Contact</a></li>
                <li><a href="/todo" class="nav-link">Todo</a></li>
            </ul>
        </nav>
        <div class="logout">
            <a href="/logout" class="btn btn-danger">Log Out</a>
        </div>
    </header>

    <!-- Todo Container -->
    <div class="todo-container">
        <button id="addTodoBtn" class="btn btn-primary mb-3">Add Todo</button>
        <div id="todoList"></div>
    </div>

    <!-- Modal for Adding and Editing Todo -->
    <div id="todoModal" class="modal">
        <div class="modal-content">
            <span class="close-btn">&times;</span>
            <h2 id="modalTitle">Add Todo</h2>
            <form id="todoForm">
                <input type="text" id="todoInput" placeholder="Enter todo" required>
                <button type="submit" id="saveTodoBtn" class="btn btn-success">Save Todo</button>
            </form>
        </div>
    </div>

    <!-- Footer -->
    <footer class="text-center bg-light py-3">
        <p>PENGEMBANGAN APLIKASI WEB - 2024</p>
    </footer>
</div>

<script>
    let todos = []; // Store todos
    let editingIndex = -1; // Track if we are editing an existing todo

    // Show Modal
    const todoModal = document.getElementById('todoModal');
    const addTodoBtn = document.getElementById('addTodoBtn');
    const closeModal = document.querySelector('.close-btn');
    const todoForm = document.getElementById('todoForm');
    const todoInput = document.getElementById('todoInput');
    const todoList = document.getElementById('todoList');

    // Open Modal for Add Todo
    addTodoBtn.onclick = function() {
        todoModal.style.display = 'block';
        todoInput.value = ''; // Clear input field
        document.getElementById('modalTitle').innerText = 'Add Todo';
        document.getElementById('saveTodoBtn').onclick = function(event) {
            event.preventDefault();
            const task = todoInput.value.trim();
            if (task) {
                if (editingIndex === -1) {
                    todos.push({ task: task, completed: false });
                } else {
                    todos[editingIndex].task = task; // Update existing todo
                    editingIndex = -1;
                }
                renderTodos();
                todoModal.style.display = 'none';
            }
        };
    };

    // Close Modal
    closeModal.onclick = function() {
        todoModal.style.display = 'none';
    };

    // Render Todos
    function renderTodos() {
        todoList.innerHTML = ''; // Clear the current list
        todos.forEach((todo, index) => {
            const todoCard = document.createElement('div');
            todoCard.classList.add('todo-card');
            todoCard.innerHTML = `
                <p>${todo.task}</p>
                <div class="buttons">
                    <button onclick="editTodo(${index})">Edit</button>
                    <button onclick="deleteTodo(${index})">Delete</button>
                </div>
            `;
            todoList.appendChild(todoCard);
        });
    }

    // Edit Todo
    function editTodo(index) {
        editingIndex = index;
        const todo = todos[index];
        todoInput.value = todo.task;
        todoModal.style.display = 'block';
        document.getElementById('modalTitle').innerText = 'Edit Todo';
    }

    // Delete Todo
    function deleteTodo(index) {
        todos.splice(index, 1);
        renderTodos();
    }

    // Initial rendering
    renderTodos();
</script>

</body>
</html>
